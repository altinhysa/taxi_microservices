version: "3.8"
services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - backend
  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
      - backend
  passengerdb:
    image: postgres:13
    ports:
      - "5437:5432"
    volumes:
      - ./postgres/init/:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_DB: passenger
      POSTGRES_USER: passenger
      POSTGRES_PASSWORD: passenger123
      PGDATA: /var/lib/postgresql/data/passenger
    networks:
      - backend

  mongoDb:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: altin
      MONGO_INITDB_ROOT_PASSWORD: altin
    networks:
      - backend

  eurekaserver:
    build: eureka-server
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://eurekaserver:8761" ]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "8761:8761"
    depends_on:
      - kafka1
      - zoo1
    networks:
      - backend

  passenger-service:
    build: passenger-management-service
    restart: on-failure
    ports:
      - "8083:8083"
    depends_on:
      eurekaserver:
        condition: service_healthy
      passengerdb:
        condition: service_started
    networks:
      - backend
    links:
      - eurekaserver
  trip-service:
    build: trip-management-service
    restart: on-failure
    ports:
      - "8081:8081"
    depends_on:
      eurekaserver:
          condition: service_healthy
      kafka1:
        condition: service_started
      zoo1:
        condition: service_started
      mongoDb:
        condition: service_started
    networks:
      - backend
    links:
      - mongoDb
      - eurekaserver

  email-service:
    build: email-service
    restart: on-failure
    ports:
      - "8082:8082"
    depends_on:
      eurekaserver:
        condition: service_healthy
      kafka1:
        condition: service_started
      zoo1:
        condition: service_started
    networks:
      - backend
    links:
      - eurekaserver
networks:
  backend:
