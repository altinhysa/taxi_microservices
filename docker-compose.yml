version: "3.8"

services:
  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - backend

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
      - backend

  passengerDb:
    image: postgres:13
    ports:
      - "5437:5432"
    volumes:
      - ./postgres/init/:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_DB: passenger
      POSTGRES_USER: passenger
      POSTGRES_PASSWORD: passenger123
      PGDATA: /var/lib/postgresql/data/passenger
    networks:
      - backend

  mongoDb:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: altinhysa84
      MONGO_INITDB_ROOT_PASSWORD: 15uxQqzEEtmH6HB0
    networks:
      - backend

  eurekaServer:
    build: ./eureka-server
    restart: on-failure
    ports:
      - "8761:8761"
    environment:
      SERVER_PORT: 8761
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka1:19092
    depends_on:
      - kafka1
      - zoo1
    networks:
      - backend

  passenger-service:
    build: ./passenger-management-service
    restart: on-failure
    ports:
      - "8083:8083"
    environment:
      SPRING_APPLICATION_NAME: passenger-management-service
      SERVER_PORT: 8083
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://eurekaServer:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:postgresql://passengerDb:5432/passenger
      SPRING_DATASOURCE_USERNAME: passenger
      SPRING_DATASOURCE_PASSWORD: passenger123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - passengerDb
      - eurekaServer
    networks:
      - backend

  trip-service:
    build: ./trip-management-service
    restart: on-failure
    ports:
      - "8081:8081"
    environment:
      SERVER_PORT: 8081
      SPRING_APPLICATION_NAME: trip-management-service
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://0.0.0.0:8761/eureka
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka1:19092
      SPRING_DATA_MONGODB_HOST: mongoDb
      SPRING_DATA_MONGODB_PORT: 27017
      SPRING_DATA_MONGODB_USERNAME: altinhysa84
      SPRING_DATA_MONGODB_PASSWORD: 15uxQqzEEtmH6HB0
    depends_on:
      - kafka1
      - zoo1
      - eurekaServer
      - mongoDb
    networks:
      - backend

  email-service:
    build: ./email-service
    restart: on-failure
    ports:
      - "8082:8082"
    environment:
      SERVER_PORT: 8082
      SPRING_APPLICATION_NAME: email-service
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://eurekaServer:8761/eureka
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka1:19092
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: altinhysa84@gmail.com
      SPRING_MAIL_PASSWORD: yygkiyyarebpdjzi
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: true
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: true
    depends_on:
      - kafka1
      - zoo1
      - eurekaServer
    networks:
      - backend

networks:
  backend:
    driver: bridge
